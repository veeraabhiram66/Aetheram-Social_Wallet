import React, { useState } from 'react';
import { ethers } from 'ethers';
import { Button } from './UI';

// Simple Wallet contract bytecode and ABI
const SIMPLE_WALLET_BYTECODE = "0x608060405234801561000f575f80fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061134a8061005c5f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c80638da5cb5b116100595780638da5cb5b146100f8578063a9059cbb14610116578063b61d27f614610132578063e2b7fb211461014e57610086565b80630b61ba6714610087578063296c8cdc146100b757806330cd7426146100d357806370a08231146100f1575b5f80fd5b6100a1600480360381019061009c91906108b2565b61016c565b6040516100ae9190610917565b60405180910390f35b6100d160048036038101906100cc9190610958565b610234565b005b6100db6102b3565b6040516100e89190610917565b60405180910390f35b6100f66102c2565b005b610100610344565b60405161010d91906109bc565b60405180910390f35b610130600480360381019061012b91906109d5565b610369565b005b61014c60048036038101906101479190610aed565b6103e8565b005b6101566104fe565b6040516101639190610917565b60405180910390f35b5f73ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff16146101f957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b90610bb8565b60405180910390fd5b61022d82610234565b600190505b919050565b5f73ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff16146102ae57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f790610bb8565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b5f600360009054906101000a900460ff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff161461033f57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033890610bb8565b60405180910390fd5b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff16146103e457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e090610bb8565b60405180910390fd5b6103e4565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff16146104fb57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049f90610bb8565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156104ec573d5f803e3d5ffd5b506104f7838361050d565b505b505050565b5f804390505f8192505050919050565b5f8273ffffffffffffffffffffffffffffffffffffffff1634846040516105349190610c5f565b5f6040518083038185875af1925050503d8060008114610570576040519150601f19603f3d011682016040523d82523d5f602084013e610575565b606091505b505090505f1515811515036105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b690610cbf565b60405180910390fd5b505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105f2826105c9565b9050919050565b610602816105e8565b811461060c575f80fd5b50565b5f8135905061061d816105f9565b92915050565b5f819050919050565b61063581610623565b811461063f575f80fd5b50565b5f813590506106508161062c565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6106a38261065d565b810181811067ffffffffffffffff821117156106c2576106c161066d565b5b80604052505050565b5f6106d4610654565b90506106e0828261069a565b919050565b5f67ffffffffffffffff8211156106ff576106fe61066d565b5b6107088261065d565b9050602081019050919050565b828183375f83830152505050565b5f610735610730846106e5565b6106cb565b90508281526020810184848401111561075157610750610659565b5b61075c848285610715565b509392505050565b5f82601f83011261077857610777610655565b5b8135610788848260208601610723565b91505092915050565b5f805f606084860312156107a8576107a76105c4565b5b5f6107b58682870161060f565b93505060206107c686828701610642565b925050604084013567ffffffffffffffff8111156107e7576107e66105c4565b5b6107f386828701610764565b9150509250925092565b5f8115159050919050565b610811816107fd565b82525050565b5f60208201905061082a5f830184610808565b92915050565b610839816105e8565b82525050565b5f6020820190506108525f830184610830565b92915050565b5f6020828403121561086d5761086c6105c4565b5b5f61087a8482850161060f565b91505092915050565b61088c81610623565b82525050565b5f6020820190506108a55f830184610883565b92915050565b5f602082840312156108c0576108bf6105c4565b5b5f6108cd84828501610642565b91505092915050565b5f6108e0826105c9565b9050919050565b6108f0816108d6565b82525050565b5f60208201905061090a5f8301846108e7565b92915050565b61091981610623565b82525050565b5f6020820190506109325f830184610910565b92915050565b610941816108d6565b811461094b575f80fd5b50565b5f8135905061095c81610938565b92915050565b5f6020828403121561097757610976610658565b5b5f6109848482850161094e565b91505092915050565b5f610997826105c9565b9050919050565b6109a78161098d565b82525050565b5f6020820190506109c05f83018461099e565b92915050565b6109cf8161098d565b82525050565b5f80604083850312156109eb576109ea6105c4565b5b5f6109f88582860161094e565b9250506020610a0985828601610642565b9150509250929050565b5f80fd5b5f80fd5b5f8083601f840112610a3057610a2f610655565b5b8235905067ffffffffffffffff811115610a4d57610a4c610a13565b5b602083019150836001820283011115610a6957610a68610a17565b5b9250929050565b5f8083601f840112610a8557610a84610655565b5b8235905067ffffffffffffffff811115610aa257610aa1610a13565b5b602083019150836001820283011115610abe57610abd610a17565b5b9250929050565b5f805f8060608587031215610add57610adc6105c4565b5b5f610aea87828801610642565b945050602085013567ffffffffffffffff811115610b0b57610b0a6105c4565b5b610b1787828801610a1b565b9350935050604085013567ffffffffffffffff811115610b3a57610b396105c4565b5b610b4687828801610a70565b925092505092959194509250565b7f4f776e61626c653a2063616c6c6572206973206e6f74207468652063757272655f8201527f6e74206f776e657200000000000000000000000000000000000000000000000020820152505050565b5f610bb2602883610715565b9150610bbd82610b58565b604082019050919050565b5f6020820190508181035f830152610bdf81610ba6565b9050919050565b5f82825260208201905092915050565b50565b5f610c045f83610be6565b9150610c0f82610bf6565b5f82019050919050565b5f610c23826105c9565b9050919050565b610c3381610c19565b82525050565b5f819050919050565b610c4b81610c39565b82525050565b5f610c5c8284610c2a565b915081905092915050565b5f610c718261060f565b610c7b8185610be6565b9350610c8b818560208601610715565b610c948161065d565b840191505092915050565b7f43616c6c206661696c65640000000000000000000000000000000000000000005f82015250565b5f610cd3600b83610be6565b9150610cde82610c9f565b602082019050919050565b5f6020820190508181035f830152610d0081610cc7565b905091905056fea2646970667358221220e8b8f5b47e4e4a4c2f8e8b5d4e8f7a4e6c8e4e4a4c2f8e8b5d4e8f7a4e6c8e4e4603f64736f6c634300081a0033";

const SIMPLE_WALLET_ABI = [
  "constructor()",
  "function getCurrentNonce() external view returns (uint256)",
  "function owner() external view returns (address)",
  "function executeMetaTransaction(address to, uint256 value, bytes calldata data, uint256 nonce, bytes calldata signature) external returns (bool)"
];

const WalletDeployer = ({ onDeployment, account }) => {
  const [isDeploying, setIsDeploying] = useState(false);
  const [deployedAddress, setDeployedAddress] = useState(null);

  const deployWallet = async () => {
    if (!window.ethereum || !account) {
      alert('Please connect your wallet first');
      return;
    }

    setIsDeploying(true);
    
    try {
      const provider = new ethers.BrowserProvider(window.ethereum);
      const signer = await provider.getSigner();
      
      console.log('üöÄ Deploying smart wallet for:', account);
      
      // Create contract factory
      const factory = new ethers.ContractFactory(SIMPLE_WALLET_ABI, SIMPLE_WALLET_BYTECODE, signer);
      
      // Deploy the contract
      const contract = await factory.deploy();
      await contract.waitForDeployment();
      
      const address = await contract.getAddress();
      console.log('‚úÖ Smart wallet deployed to:', address);
      
      setDeployedAddress(address);
      
      // Notify parent component
      if (onDeployment) {
        onDeployment({
          address: address,
          owner: account,
          nonce: 0,
          balance: '0',
          isDeployed: true
        });
      }
      
      alert(`Smart wallet deployed successfully!\nAddress: ${address}`);
      
    } catch (error) {
      console.error('‚ùå Deployment failed:', error);
      alert(`Deployment failed: ${error.message}`);
    } finally {
      setIsDeploying(false);
    }
  };

  return (
    <div className="p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg">
      <div className="space-y-3">
        <div>
          <h4 className="text-sm font-medium text-green-800 dark:text-green-200">
            Deploy Smart Wallet
          </h4>
          <p className="text-sm text-green-700 dark:text-green-300 mt-1">
            Deploy a new smart wallet contract directly from the browser.
          </p>
        </div>
        
        {deployedAddress && (
          <div className="bg-green-100 dark:bg-green-800 p-3 rounded text-sm">
            <p className="text-green-800 dark:text-green-200 font-medium">
              ‚úÖ Deployed to: {deployedAddress}
            </p>
          </div>
        )}
        
        <Button
          onClick={deployWallet}
          disabled={isDeploying || !account}
          variant="primary"
          size="sm"
        >
          {isDeploying ? 'Deploying...' : 'Deploy Smart Wallet'}
        </Button>
      </div>
    </div>
  );
};

export default WalletDeployer;
